/*
Copyright Â© 2022 NAME HERE <EMAIL ADDRESS>

*/
package cmd

import (
	"bufio"
	"bytes"
	"fmt"
	diff "meoconbatu/diffdecoding/lib"
	"os"

	"github.com/spf13/cobra"
)

var (
	iFile, oFile string
	noColor      bool
)

// rootCmd represents the base command when called without any subcommands
var rootCmd = &cobra.Command{
	Use:   "diff",
	Args:  cobra.NoArgs,
	Short: "diff is a tool to decode and diff value in user_data_base64 attribute on aws_instance, generated by 'terraform plan'.",
	Long: `diff is a tool to decode and diff value in user_data_base64 attribute on aws_instance, generated by 'terraform plan'.
If values are rendered from cloud-init data source, decode encoded content (if exists) before diff.`,
	// Uncomment the following line if your bare application
	// has an action associated with it:
	Run: func(cmd *cobra.Command, args []string) {
		var buf bytes.Buffer
		f, err := os.Open(iFile)
		if err != nil {
			fmt.Println(err.Error())
			return
		}
		err = diff.Diff(bufio.NewReader(f), &buf, noColor)
		if err != nil {
			fmt.Println(err.Error())
			return
		}
		if oFile != "" {
			os.WriteFile(oFile, buf.Bytes(), 0644)
		} else {
			fmt.Fprint(os.Stdout, buf.String())
		}
	},
}

// Execute adds all child commands to the root command and sets flags appropriately.
// This is called by main.main(). It only needs to happen once to the rootCmd.
func Execute() {
	err := rootCmd.Execute()
	if err != nil {
		os.Exit(1)
	}
}

func init() {
	rootCmd.Flags().StringVarP(&iFile, "input", "i", "", "Read input from the given path")
	rootCmd.Flags().StringVarP(&oFile, "output", "o", "", "Write output to the given path. If not specified, print output to console")
	rootCmd.Flags().BoolVar(&noColor, "no-color", false, "If specified, output won't contain any color")
}
